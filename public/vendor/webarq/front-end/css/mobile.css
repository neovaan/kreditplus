/*=============================================================================================	
    Company    : PT Web Architect Technology - webarq.com
    Document   : Stylesheet
    Author     : FrontEnd Team  
==============================================================================================*/
/* import bourbon - http://bourbon.io/docs */
/* color global
----------------------------------------------------------------------------------------------*/
@media (min-width: 0px) and (max-width: 690px) {
  h2 {
    font-size: 18px;
  }
  h3 {
    font-size: 16px;
  }
  h4 {
    font-size: 13px;
  }
  .icwp.ic_checked {
    width: 15px;
    height: 15px;
  }
  .row_list {
    width: auto;
    display: block;
  }
  .row_list .col.col_xsml {
    width: 100%;
  }
  .row_list .col.col_xsml7 {
    width: 70%;
  }
  .row_list .col.col_xsml65 {
    width: 65%;
  }
  .row_list .col.col_xsml6 {
    width: 60%;
  }
  .row_list .col.col_xsml55 {
    width: 55%;
  }
  .row_list .col.col_xsml5 {
    width: 50%;
  }
  .row_list .col.col_xsml45 {
    width: 45%;
  }
  .row_list .col.col_xsml4 {
    width: 40%;
  }
  .row_list .col.col_xsml37 {
    width: 37%;
  }
  .row_list .col.col_xsml35 {
    width: 35%;
  }
  .row_list .col.col_xsml33 {
    width: 33.3333333333333%;
  }
  .row_list .col.col_xsml3 {
    width: 30%;
  }
  .row_list .col.col_xsml25 {
    width: 25%;
  }
  .row_list .col.col_xsml2 {
    width: 20%;
  }
  .row_list .col.col_xsml16 {
    width: 16.66666666666666%;
  }
  .row_list .col.col_xsml1 {
    width: 10%;
  }
  .row_list.center {
    text-align: center;
  }
  .row_list.center .col {
    float: none;
    display: inline-block;
  }
  .row_list.listfull {
    margin-left: 0;
    margin-right: 0;
  }
  .row_list.listfull .col {
    padding: 0;
  }
  .row_list.listp5 {
    margin-left: 0;
    margin-right: 0;
  }
  .row_list.listp5 .col {
    padding: 0;
  }
  header .wrapper {
    padding: 0 10px;
  }
  header .head-top .left {
    padding-left: 10px;
  }
  header .head-top .left a {
    padding: 0 10px;
  }
  header .head-top .left .icwp {
    margin-right: 5px;
    position: relative;
    top: -1px;
  }
  header .head-top .right {
    padding-right: 10px;
    padding-top: 12px;
  }
  header .head-top .right a {
    padding: 0 10px;
  }
  header .logo {
    width: 110px;
  }
  header .mainmenu ul {
    position: fixed;
    top: 0;
    padding-top: 0;
    left: 0;
    background: #e51b25;
    background: -moz-linear-gradient(-45deg, #e51b25 0%, #fbb106 100%);
    background: -webkit-gradient(left top, right bottom, color-stop(0%, #e51b25), color-stop(100%, #fbb106));
    background: -webkit-linear-gradient(-45deg, #e51b25 0%, #fbb106 100%);
    background: -o-linear-gradient(-45deg, #e51b25 0%, #fbb106 100%);
    background: -ms-linear-gradient(-45deg, #e51b25 0%, #fbb106 100%);
    background: linear-gradient(135deg, #e51b25 0%, #fbb106 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e51b25', endColorstr='#fbb106', GradientType=1 );
  }
  header .mainmenu ul:before {
    display: none;
  }
  header .mainmenu ul li a {
    padding: 25px 20px;
    display: block;
    font-size: 14px;
  }
  header .mainmenu ul li.menures a {
    font-size: 18px;
    padding: 20px;
  }
  header .mainmenu ul li.srres {
    display: block;
    padding: 20px 20px;
    border: none;
  }
  header .mainmenu .box-search {
    display: none;
  }
  header .mainmenu .burg-menu {
    margin-right: 20px;
    margin-top: 18px;
  }
  header .mainmenu .burg-menu:before {
    display: none;
  }
  header .request-head .btn-request {
    height: 55px;
    line-height: 55px;
  }
  .searchright {
    position: relative;
  }
  .searchright input {
    background: transparent;
    color: #fff;
    width: 100%;
    height: 40px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    border-radius: 50px;
    -webkit-border-radius: 50px;
    -moz-border-radius: 50px;
    -ms-border-radius: 50px;
    -o-border-radius: 50px;
    padding: 0 45px 0 30px;
    font-size: 12px;
  }
  .searchright button {
    position: absolute;
    top: 12px;
    right: 20px;
    background: transparent;
    border: none;
    width: 15px;
    height: 15px;
    background: url("../images/material/ic_search_white.png") no-repeat center;
  }
  .searchright ::-webkit-input-placeholder {
    color: #fff;
  }
  .searchright :-moz-placeholder {
    color: #fff;
  }
  .searchright ::-moz-placeholder {
    color: #fff;
  }
  .searchright :-ms-input-placeholder {
    color: #fff;
  }
  .loaderpage {
    background-size: 60px;
  }
  .boxsliderhome .list-slide figure {
    min-height: 480px;
    max-height: 600px;
  }
  .boxsliderhome .list-slide .desc {
    text-align: center;
  }
  .boxsliderhome .list-slide .desc h1, .boxsliderhome .list-slide .desc p {
    width: auto;
  }
  .boxsliderhome .list-slide .desc h1 {
    font-size: 20px;
    line-height: 28px;
  }
  .boxsliderhome .list-slide .desc p, .boxsliderhome .list-slide .desc .dotted {
    display: none;
  }
  .boxsliderhome .list-slide .desc .wrapper {
    padding: 0 20px;
  }
  .box-servicehome p {
    font-size: 13px;
    margin-bottom: 20px;
  }
  .box-servicehome .left-service {
    padding-top: 40px;
  }
  .box-servicehome .left-service .ctn-service {
    width: auto;
    float: none;
  }
  .box-servicehome .left-service .box-simservice {
    width: auto;
    float: none;
    padding-top: 20px;
  }
  .box-servicehome .right-service {
    display: none;
  }
  .box-simservice {
    margin: 0;
  }
  .box-simservice .list-simservice {
    padding: 0 10px;
  }
  .box-simservice .list-simservice:before {
    display: none;
  }
  .box-list-product .list-product {
    width: 100%;
    text-align: left;
    padding-bottom: 10px;
    margin-bottom: 10px;
    margin-top: 0;
  }
  .box-list-product .list-product:before {
    width: auto;
    height: 1px;
    left: 0;
    top: auto;
  }
  .box-list-product .list-product h4 {
    height: auto;
    margin-bottom: 10px;
    font-size: 14px;
  }
  .box-list-product .list-product figure {
    float: left;
    width: 33.33333%;
    margin-bottom: 0;
  }
  .box-list-product .list-product p {
    display: none;
  }
  .box-list-product .list-product .desc {
    float: right;
    width: 62.5%;
    display: table;
    vertical-align: middle;
    height: 80px;
  }
  .box-list-product .list-product .desc h4 {
    display: table-cell;
    vertical-align: middle;
  }
  .box-list-product .list-product .in-product {
    padding: 0;
  }
  .box-list-product .list-product .in-product:after {
    content: "";
    clear: both;
    display: block;
  }
  .box-list-product .list-product:last-child {
    padding-bottom: 0;
    margin-bottom: 0;
  }
  .box-list-product .list-product:last-child:before {
    display: none;
  }
  .inprodukkredit {
    padding: 0 18px;
  }
  .produkkredit {
    padding-bottom: 20px;
  }
  .produkkredit .bgcirc {
    width: 38px;
    height: 38px;
    bottom: 0px;
    left: 15px;
  }
  .title-infohome {
    margin-bottom: 20px;
  }
  .title-infohome:after {
    content: "";
    clear: both;
    display: block;
  }
  .title-infohome h3 {
    margin-bottom: 0;
    float: left;
    line-height: 20px;
  }
  .title-infohome a {
    float: right;
    line-height: 20px;
  }
  .box-list-info-sm .list-info-sm {
    width: auto;
    margin-bottom: 20px;
  }
  .box-list-info-sm .list-info-sm h4 {
    font-size: 14px;
    line-height: 20px;
    height: 40px;
    margin-bottom: 10px;
  }
  .box-list-info-sm .list-info-sm p {
    font-size: 14px;
    line-height: 18px;
    height: 36px;
    margin-bottom: 10px;
  }
  .intestimonihome {
    padding: 30px;
  }
  .box-list-testimoni .list-testimoni {
    width: auto;
    margin-bottom: 20px;
  }
  .box-list-testimoni .list-testimoni .inner-testimoni {
    padding-top: 20px;
    padding-bottom: 20px;
  }
  .ctn-testi {
    height: auto;
  }
  .box-list-sponsor {
    padding: 30px 0;
  }
  .box-list-sponsor .list-sponsor {
    width: auto;
    text-align: center;
    /*&:nth-child(n+5){display: none;}*/
  }
  .box-list-sponsor .list-sponsor img {
    display: inline-block;
    vertical-align: middle;
  }
  .box-list-sponsor .slick-prev {
    left: 15px;
  }
  .box-list-sponsor .slick-next {
    right: 15px;
  }
  .box-chat .ttl-chat {
    font-size: 12px;
    padding: 12px 15px 10px;
  }
  .ctnwp {
    padding-bottom: 30px;
    font-size: 12px;
    line-height: 18px;
  }
  .ctnwp p {
    font-size: 13px;
    line-height: 21px;
  }
  .ctnwp table tr {
    display: inline-block;
    width: 100%;
    padding: 15px 0;
  }
  .ctnwp table tr td {
    padding: 5px 10px;
    vertical-align: middle;
    display: inline-block;
    width: 100%;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  .ctnwp table tr td:before {
    content: attr(data-title);
    position: relative;
    width: 100%;
    display: inline-block;
    height: 100%;
    font-weight: 700;
    margin-bottom: 3px;
  }
  .ctnwp table tr td.a-center {
    text-align: left;
  }
  .ctnwp table thead {
    display: none;
  }
  .ctnwp table thead tr th {
    padding: 15px 10px;
    vertical-align: middle;
  }
  .ctnwp ol, .ctnwp ul {
    font-size: 13px;
    line-height: 21px;
  }
  .ctnwp ol li:before {
    width: 6px;
    height: 6px;
    left: 2px;
  }
  .box-vis {
    margin-left: 0;
    margin-right: 0;
  }
  .box-vis > .left, .box-vis > .right {
    width: 100%;
    padding: 0;
  }
  .box-vis > .left {
    margin-bottom: 20px;
  }
  .adv {
    padding: 30px 20px;
  }
  .adv h4 {
    margin: 0;
    display: block;
    margin-bottom: 10px;
    text-align: right;
  }
  .box-list-achievement {
    margin-bottom: 20px;
  }
  .box-list-achievement .list-achievement {
    width: 100%;
    margin-bottom: 15px;
  }
  .box-list-achievement .list-achievement h4 {
    height: auto;
  }
  .box-list-achievement .list-achievement p {
    margin-bottom: 0;
    height: auto;
  }
  .box-list-achievement .list-achievement .in-achievement {
    padding: 20px 15px;
  }
  .pagination {
    padding-top: 30px;
  }
  .pagination a.prev, .pagination a.next {
    font-size: 0;
  }
  .pagination a.prev:before {
    content: "<<";
    font-size: 12px;
  }
  .pagination a.next:before {
    content: ">>";
    font-size: 12px;
  }
  .prod-list-h {
    margin-left: 0;
    margin-right: 0;
  }
  .prod-list-h .list-prod {
    width: 100%;
    margin-bottom: 15px;
    padding-bottom: 15px;
    border-bottom: 1px solid #e1e1e1;
    padding-left: 0;
    padding-right: 0;
  }
  .prod-list-h .list-prod:before {
    display: none;
  }
  .prod-list-h .list-prod figure {
    width: 30%;
  }
  .prod-list-h .list-prod .desc-prod {
    width: 67%;
    height: 90px;
    display: table;
    vertical-align: middle;
  }
  .prod-list-h .list-prod .desc-prod h4 {
    padding-top: 0;
    display: table-cell;
    vertical-align: middle;
  }
  .related-product h4 {
    font-size: 16px;
  }
  .downloadapps.margtop {
    margin-top: 30px;
  }
  .downloadapps .left {
    width: 100%;
    margin-bottom: 10px;
  }
  .downloadapps .right {
    width: 100%;
  }
  .title-info .left {
    width: 100%;
    margin-bottom: 10px;
  }
  .title-info .right {
    width: 100%;
  }
  .promo-list .list-promo {
    margin-bottom: 30px;
  }
  .promo-list .list-promo h4 {
    font-size: 14px;
    line-height: 21px;
    max-height: 42px;
  }
  .promo-list .list-promo figure {
    display: none;
  }
  .promo-list .list-promo .desc-promo {
    width: 100%;
  }
  .news-list .list-news {
    width: 100%;
    margin-bottom: 30px;
    font-size: 12px;
  }
  .news-list .list-news h4 {
    height: auto;
    font-size: 14px;
    line-height: 21px;
    margin-bottom: 5px;
  }
  .news-list .list-news figure {
    display: none;
  }
  .news-list .list-news p {
    margin-bottom: 10px;
  }
  .news-list .list-news .desc-news {
    width: 100%;
  }
  .news-list .list-news:last-child {
    margin-bottom: 0;
  }
  .related-news {
    padding-top: 30px;
    margin-top: 30px;
  }
  .related-news .news-list {
    margin-top: 20px;
  }
  .box-acc .list-acc {
    padding-left: 15px;
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    -ms-border-radius: 5px;
    -o-border-radius: 5px;
  }
  .box-acc .list-acc .btn-acc h5 {
    font-size: 15px;
  }
  .box-acc .list-acc .btn-acc span {
    font-size: 12px;
  }
  .box-acc .list-acc .btn-acc .plusacc {
    right: -35px;
  }
  .banner figure {
    height: 230px;
    position: relative;
  }
  .banner figure img {
    max-width: none;
    min-width: 100%;
    height: 100%;
    width: auto;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
  }
  .banner .box-maps iframe, .banner .box-maps #map_location {
    height: 230px;
  }
  .career-form .left, .career-form .right {
    width: 100%;
  }
  .career-form .left {
    margin-bottom: 40px;
  }
  .address-box {
    padding: 35px 30px;
  }
  .address-box h4 {
    font-size: 13px;
  }
  .box-filter .left {
    width: 100%;
  }
  .box-filter .right {
    width: 100%;
    text-align: left;
    font-size: 14px;
  }
  .box-filter .right select {
    font-size: 14px;
  }
  .office-list .list-office {
    width: 100%;
  }
  .office-list .list-office .in-office {
    padding: 20px;
  }
  .produk-list .l-produk {
    width: 100%;
    margin-bottom: 10px;
    /*&.active{
				.in-produk{
					.btn-box{background: #ffd204 url('../images/material/checked.png') no-repeat center;}
					&:hover{border-color: #e1e1e1;}
				}
			}*/
  }
  .produk-list .l-produk figure {
    float: left;
    width: 30%;
  }
  .produk-list .l-produk .desc-product {
    float: right;
    width: 68%;
  }
  .produk-list .l-produk .in-produk {
    text-align: left;
    position: relative;
    padding: 10px 30px 10px 10px;
  }
  .produk-list .l-produk .in-produk:after {
    content: "";
    display: block;
    clear: both;
  }
  .produk-list .l-produk .in-produk h5 {
    height: auto;
  }
  .produk-list .l-produk .in-produk .btn-box {
    right: 0;
    bottom: auto;
    left: auto;
    top: 0;
    width: 25px;
    height: 25px;
  }
  .produk-list .l-produk .in-produk:hover .btn-box {
    position: absolute;
    top: 0;
    right: 0;
  }
  .produk-list .l-produk.active .in-produk .btn-box {
    position: absolute;
    top: 0;
    right: 0;
  }
  .box-form input[type=text],
  .box-form input[type=email],
  .box-form input[type=number],
  .box-form input[type=password],
  .box-form textarea,
  .box-form select {
    height: 40px;
  }
  .box-form textarea {
    height: 80px;
    padding-top: 10px;
    padding-bottom: 10px;
  }
  .box-form label {
    margin-bottom: 5px;
    display: inline-block;
  }
  .box-form.row_list .col.subcap, .box-form .row_list .col.subcap {
    padding-top: 0;
    text-align: center;
  }
  .radio-custom {
    padding-left: 25px;
  }
  .radio-custom input[type=radio] {
    width: 15px;
    height: 15px;
    background-size: 100%;
    top: 2px;
  }
  .notsim {
    font-size: 13px;
  }
  .popup .in-popup {
    margin-top: 20px;
    left: 20px;
    right: 20px;
    transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
  }
  .popup .in-popup .btn-close {
    left: auto;
    right: 0;
    top: auto;
    bottom: 100%;
  }
  .popup .wrappop {
    max-height: 80vh;
  }
  .popup#pop-prestasi figure img {
    max-width: 100%;
  }
  footer .foot-top {
    padding: 20px 0;
  }
  footer .foot-subs {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
  }
  footer .foot-subs .box-subscribe {
    width: auto;
    float: none;
    order: 2;
    padding: 0;
    margin-bottom: 0;
  }
  footer .foot-subs .box-ojk {
    width: auto;
    float: none;
    text-align: center;
    order: 1;
    margin-bottom: 20px;
    padding: 0;
  }
  footer .foot-subs .box-ojk h6 {
    display: none;
  }
  footer .foot-bottom {
    padding-top: 10px;
  }
  footer .foot-bottom .logo-foot {
    display: none;
  }
  footer .foot-bottom .wrapper {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
  }
  footer .foot-bottom .copyright {
    order: 2;
  }
  footer .foot-bottom .sosmed-foot {
    order: 1;
  }
  footer .foot-bottom .sosmed-foot span {
    display: none;
  }
}

@media (min-width: 0px) and (max-width: 440px) {
  header .logo {
    padding-left: 10px;
  }
  header .mainmenu .burg-menu {
    margin-right: 10px;
  }
  header .request-head .btn-request {
    width: 75px;
    line-height: 16px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    padding-top: 12px;
  }
  .box-list-product .list-product .desc {
    height: 50px;
  }
  .box-list-info-sm .list-info-sm figure {
    width: 36%;
  }
  .box-list-info-sm .list-info-sm .desc-sm-info {
    width: 60%;
  }
  .intestimonihome {
    padding: 30px 20px;
  }
  .box-list-testimoni .ctn-testi {
    padding-left: 15px;
  }
  .box-submenu .btn-submenu {
    min-width: 150px;
  }
  .popup .dpres {
    padding: 15px;
  }
  .popup#pop-prestasi figure {
    padding: 20px;
  }
  .g-recaptcha {
    transform: scale(0.9);
    -webkit-transform: scale(0.9);
    -moz-transform: scale(0.9);
    -ms-transform: scale(0.9);
    -o-transform: scale(0.9);
    transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    -moz-transform-origin: 0 0;
    -ms-transform-origin: 0 0;
    -o-transform-origin: 0 0;
  }
  .pagination a {
    margin: 0 5px;
  }
  .prod-list-h .list-prod .desc-prod {
    height: 65px;
  }
  .banner .box-maps iframe, .banner .box-maps #map_location {
    height: 330px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
